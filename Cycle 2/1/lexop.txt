1 <#include <stdio.h>,INCLUDE>
2 <#include <stdlib.h>,INCLUDE>
3 <#include <string.h>,INCLUDE>
4 <#include <regex.h>,INCLUDE>
6 <int,KEYWORD>
6 <matchPattern,IDENTIFIER>
6 <(,PARANTHESES>
6 <char,KEYWORD>
6 <*,ARMOP_*>
6 <str,IDENTIFIER>
6 <,,SEPERATOR>
6 <char,KEYWORD>
6 <*,ARMOP_*>
6 <pattern,IDENTIFIER>
6 <),PARANTHESES>
6 <;,SEPERATOR>
7 <int,KEYWORD>
7 <isIdentifier,IDENTIFIER>
7 <(,PARANTHESES>
7 <char,KEYWORD>
7 <*,ARMOP_*>
7 <str,IDENTIFIER>
7 <),PARANTHESES>
7 <;,SEPERATOR>
8 <int,KEYWORD>
8 <isKeyword,IDENTIFIER>
8 <(,PARANTHESES>
8 <char,KEYWORD>
8 <*,ARMOP_*>
8 <str,IDENTIFIER>
8 <),PARANTHESES>
8 <;,SEPERATOR>
9 <int,KEYWORD>
9 <isOperator,IDENTIFIER>
9 <(,PARANTHESES>
9 <char,KEYWORD>
9 <*,ARMOP_*>
9 <str,IDENTIFIER>
9 <),PARANTHESES>
9 <;,SEPERATOR>
10 <int,KEYWORD>
10 <isConstant,IDENTIFIER>
10 <(,PARANTHESES>
10 <char,KEYWORD>
10 <*,ARMOP_*>
10 <str,IDENTIFIER>
10 <),PARANTHESES>
10 <;,SEPERATOR>
11 <int,KEYWORD>
11 <isNumber,IDENTIFIER>
11 <(,PARANTHESES>
11 <char,KEYWORD>
11 <*,ARMOP_*>
11 <str,IDENTIFIER>
11 <),PARANTHESES>
11 <;,SEPERATOR>
12 <int,KEYWORD>
12 <isLiteral,IDENTIFIER>
12 <(,PARANTHESES>
12 <char,KEYWORD>
12 <*,ARMOP_*>
12 <str,IDENTIFIER>
12 <),PARANTHESES>
12 <;,SEPERATOR>
14 <void,KEYWORD>
14 <main,IDENTIFIER>
14 <(,PARANTHESES>
14 <),PARANTHESES>
15 <{,PARANTHESES>
16 <char,KEYWORD>
16 <ip,IDENTIFIER>
16 <[,PARANTHESES>
16 <100,INT_NUM>
16 <],PARANTHESES>
16 <;,SEPERATOR>
17 <while,KEYWORD>
17 <(,PARANTHESES>
17 <1,INT_NUM>
17 <),PARANTHESES>
18 <{,PARANTHESES>
19 <printf,IDENTIFIER>
19 <(,PARANTHESES>
19 <"Enter ip\n",STRING>
19 <),PARANTHESES>
19 <;,SEPERATOR>
20 <scanf,IDENTIFIER>
20 <(,PARANTHESES>
20 <"%s",STRING>
20 <,,SEPERATOR>
20 <ip,IDENTIFIER>
20 <),PARANTHESES>
20 <;,SEPERATOR>
21 <if,KEYWORD>
21 <(,PARANTHESES>
21 <isConstant,IDENTIFIER>
21 <(,PARANTHESES>
21 <ip,IDENTIFIER>
21 <),PARANTHESES>
21 <==,RELOP_EQ>
21 <1,INT_NUM>
21 <),PARANTHESES>
22 <{,PARANTHESES>
23 <printf,IDENTIFIER>
23 <(,PARANTHESES>
23 <"Matched\n",STRING>
23 <),PARANTHESES>
23 <;,SEPERATOR>
24 <},PARANTHESES>
25 <else,KEYWORD>
26 <{,PARANTHESES>
27 <printf,IDENTIFIER>
27 <(,PARANTHESES>
27 <"Not Matched\n",STRING>
27 <),PARANTHESES>
27 <;,SEPERATOR>
28 <},PARANTHESES>
29 <},PARANTHESES>
30 <},PARANTHESES>
32 <int,KEYWORD>
32 <isIdentifier,IDENTIFIER>
32 <(,PARANTHESES>
32 <char,KEYWORD>
32 <*,ARMOP_*>
32 <str,IDENTIFIER>
32 <),PARANTHESES>
33 <{,PARANTHESES>
35 <if,KEYWORD>
35 <(,PARANTHESES>
35 <matchPattern,IDENTIFIER>
35 <(,PARANTHESES>
35 <str,IDENTIFIER>
35 <,,SEPERATOR>
35 <"^[a-zA-Z_][a-zA-Z0-9_]*$",STRING>
35 <),PARANTHESES>
35 <==,RELOP_EQ>
35 <1,INT_NUM>
35 <),PARANTHESES>
36 <{,PARANTHESES>
37 <return,KEYWORD>
37 <1,INT_NUM>
37 <;,SEPERATOR>
38 <},PARANTHESES>
39 <else,KEYWORD>
40 <{,PARANTHESES>
41 <return,KEYWORD>
41 <0,INT_NUM>
41 <;,SEPERATOR>
42 <},PARANTHESES>
43 <},PARANTHESES>
45 <int,KEYWORD>
45 <isKeyword,IDENTIFIER>
45 <(,PARANTHESES>
45 <char,KEYWORD>
45 <*,ARMOP_*>
45 <str,IDENTIFIER>
45 <),PARANTHESES>
46 <{,PARANTHESES>
47 <const,KEYWORD>
47 <char,KEYWORD>
47 <*,ARMOP_*>
47 <keywords,IDENTIFIER>
47 <[,PARANTHESES>
47 <],PARANTHESES>
47 <=,ASSIGN_OP>
47 <{,PARANTHESES>
48 <"auto",STRING>
48 <,,SEPERATOR>
49 <"break",STRING>
49 <,,SEPERATOR>
50 <"case",STRING>
50 <,,SEPERATOR>
51 <"char",STRING>
51 <,,SEPERATOR>
52 <"continue",STRING>
52 <,,SEPERATOR>
53 <"do",STRING>
53 <,,SEPERATOR>
54 <"default",STRING>
54 <,,SEPERATOR>
55 <"const",STRING>
55 <,,SEPERATOR>
56 <"double",STRING>
56 <,,SEPERATOR>
57 <"else",STRING>
57 <,,SEPERATOR>
58 <"enum",STRING>
58 <,,SEPERATOR>
59 <"extern",STRING>
59 <,,SEPERATOR>
60 <"for",STRING>
60 <,,SEPERATOR>
61 <"if",STRING>
61 <,,SEPERATOR>
62 <"goto",STRING>
62 <,,SEPERATOR>
63 <"float",STRING>
63 <,,SEPERATOR>
64 <"int",STRING>
64 <,,SEPERATOR>
65 <"long",STRING>
65 <,,SEPERATOR>
66 <"register",STRING>
66 <,,SEPERATOR>
67 <"return",STRING>
67 <,,SEPERATOR>
68 <"signed",STRING>
68 <,,SEPERATOR>
69 <"static",STRING>
69 <,,SEPERATOR>
70 <"sizeof",STRING>
70 <,,SEPERATOR>
71 <"short",STRING>
71 <,,SEPERATOR>
72 <"struct",STRING>
72 <,,SEPERATOR>
73 <"switch",STRING>
73 <,,SEPERATOR>
74 <"typedef",STRING>
74 <,,SEPERATOR>
75 <"union",STRING>
75 <,,SEPERATOR>
76 <"void",STRING>
76 <,,SEPERATOR>
77 <"while",STRING>
77 <,,SEPERATOR>
78 <"volatile",STRING>
78 <,,SEPERATOR>
79 <"unsigned",STRING>
79 <},PARANTHESES>
79 <;,SEPERATOR>
81 <for,KEYWORD>
81 <(,PARANTHESES>
81 <int,KEYWORD>
81 <i,IDENTIFIER>
81 <=,ASSIGN_OP>
81 <0,INT_NUM>
81 <;,SEPERATOR>
81 <i,IDENTIFIER>
81 <<,RELOP_LT>
81 <32,INT_NUM>
81 <;,SEPERATOR>
81 <i,IDENTIFIER>
81 <+,ARMOP_+>
81 <+,ARMOP_+>
81 <),PARANTHESES>
82 <{,PARANTHESES>
83 <if,KEYWORD>
83 <(,PARANTHESES>
83 <strcmp,IDENTIFIER>
83 <(,PARANTHESES>
83 <str,IDENTIFIER>
83 <,,SEPERATOR>
83 <keywords,IDENTIFIER>
83 <[,PARANTHESES>
83 <i,IDENTIFIER>
83 <],PARANTHESES>
83 <),PARANTHESES>
83 <==,RELOP_EQ>
83 <0,INT_NUM>
83 <),PARANTHESES>
84 <{,PARANTHESES>
85 <return,KEYWORD>
85 <1,INT_NUM>
85 <;,SEPERATOR>
86 <},PARANTHESES>
87 <},PARANTHESES>
88 <return,KEYWORD>
88 <0,INT_NUM>
88 <;,SEPERATOR>
89 <},PARANTHESES>
91 <int,KEYWORD>
91 <isOperator,IDENTIFIER>
91 <(,PARANTHESES>
91 <char,KEYWORD>
91 <*,ARMOP_*>
91 <str,IDENTIFIER>
91 <),PARANTHESES>
92 <{,PARANTHESES>
93 <const,KEYWORD>
93 <char,KEYWORD>
93 <*,ARMOP_*>
93 <arop,IDENTIFIER>
93 <[,PARANTHESES>
93 <],PARANTHESES>
93 <=,ASSIGN_OP>
93 <{,PARANTHESES>
93 <"+", "-", "*", "/", "%",STRING>
93 <},PARANTHESES>
93 <;,SEPERATOR>
94 <for,KEYWORD>
94 <(,PARANTHESES>
94 <int,KEYWORD>
94 <i,IDENTIFIER>
94 <=,ASSIGN_OP>
94 <0,INT_NUM>
94 <;,SEPERATOR>
94 <i,IDENTIFIER>
94 <<,RELOP_LT>
94 <5,INT_NUM>
94 <;,SEPERATOR>
94 <i,IDENTIFIER>
94 <+,ARMOP_+>
94 <+,ARMOP_+>
94 <),PARANTHESES>
95 <{,PARANTHESES>
96 <if,KEYWORD>
96 <(,PARANTHESES>
96 <strcmp,IDENTIFIER>
96 <(,PARANTHESES>
96 <str,IDENTIFIER>
96 <,,SEPERATOR>
96 <arop,IDENTIFIER>
96 <[,PARANTHESES>
96 <i,IDENTIFIER>
96 <],PARANTHESES>
96 <),PARANTHESES>
96 <==,RELOP_EQ>
96 <0,INT_NUM>
96 <),PARANTHESES>
97 <{,PARANTHESES>
98 <return,KEYWORD>
98 <1,INT_NUM>
98 <;,SEPERATOR>
99 <},PARANTHESES>
100 <},PARANTHESES>
101 <const,KEYWORD>
101 <char,KEYWORD>
101 <*,ARMOP_*>
101 <asnop,IDENTIFIER>
101 <[,PARANTHESES>
101 <],PARANTHESES>
101 <=,ASSIGN_OP>
101 <{,PARANTHESES>
101 <"=",STRING>
101 <,,SEPERATOR>
102 <"+=",STRING>
102 <,,SEPERATOR>
103 <"-=",STRING>
103 <,,SEPERATOR>
104 <"*=",STRING>
104 <,,SEPERATOR>
105 <"/=",STRING>
105 <,,SEPERATOR>
106 <"%=",STRING>
106 <,,SEPERATOR>
107 <">>=",STRING>
107 <,,SEPERATOR>
108 <"<<=",STRING>
108 <,,SEPERATOR>
109 <"&=",STRING>
109 <,,SEPERATOR>
110 <"^=",STRING>
110 <,,SEPERATOR>
111 <"|=",STRING>
111 <},PARANTHESES>
111 <;,SEPERATOR>
112 <for,KEYWORD>
112 <(,PARANTHESES>
112 <int,KEYWORD>
112 <i,IDENTIFIER>
112 <=,ASSIGN_OP>
112 <0,INT_NUM>
112 <;,SEPERATOR>
112 <i,IDENTIFIER>
112 <<,RELOP_LT>
112 <11,INT_NUM>
112 <;,SEPERATOR>
112 <i,IDENTIFIER>
112 <+,ARMOP_+>
112 <+,ARMOP_+>
112 <),PARANTHESES>
113 <{,PARANTHESES>
114 <if,KEYWORD>
114 <(,PARANTHESES>
114 <strcmp,IDENTIFIER>
114 <(,PARANTHESES>
114 <str,IDENTIFIER>
114 <,,SEPERATOR>
114 <asnop,IDENTIFIER>
114 <[,PARANTHESES>
114 <i,IDENTIFIER>
114 <],PARANTHESES>
114 <),PARANTHESES>
114 <==,RELOP_EQ>
114 <0,INT_NUM>
114 <),PARANTHESES>
115 <{,PARANTHESES>
116 <return,KEYWORD>
116 <1,INT_NUM>
116 <;,SEPERATOR>
117 <},PARANTHESES>
118 <},PARANTHESES>
119 <const,KEYWORD>
119 <char,KEYWORD>
119 <*,ARMOP_*>
119 <logop,IDENTIFIER>
119 <[,PARANTHESES>
119 <],PARANTHESES>
119 <=,ASSIGN_OP>
119 <{,PARANTHESES>
119 <"&",STRING>
119 <,,SEPERATOR>
120 <"|",STRING>
120 <,,SEPERATOR>
121 <"^",STRING>
121 <,,SEPERATOR>
122 <"&&",STRING>
122 <,,SEPERATOR>
123 <"||",STRING>
123 <},PARANTHESES>
123 <;,SEPERATOR>
124 <for,KEYWORD>
124 <(,PARANTHESES>
124 <int,KEYWORD>
124 <i,IDENTIFIER>
124 <=,ASSIGN_OP>
124 <0,INT_NUM>
124 <;,SEPERATOR>
124 <i,IDENTIFIER>
124 <<,RELOP_LT>
124 <5,INT_NUM>
124 <;,SEPERATOR>
124 <i,IDENTIFIER>
124 <+,ARMOP_+>
124 <+,ARMOP_+>
124 <),PARANTHESES>
125 <{,PARANTHESES>
126 <if,KEYWORD>
126 <(,PARANTHESES>
126 <strcmp,IDENTIFIER>
126 <(,PARANTHESES>
126 <str,IDENTIFIER>
126 <,,SEPERATOR>
126 <logop,IDENTIFIER>
126 <[,PARANTHESES>
126 <i,IDENTIFIER>
126 <],PARANTHESES>
126 <),PARANTHESES>
126 <==,RELOP_EQ>
126 <0,INT_NUM>
126 <),PARANTHESES>
127 <{,PARANTHESES>
128 <return,KEYWORD>
128 <1,INT_NUM>
128 <;,SEPERATOR>
129 <},PARANTHESES>
130 <},PARANTHESES>
131 <const,KEYWORD>
131 <char,KEYWORD>
131 <*,ARMOP_*>
131 <relop,IDENTIFIER>
131 <[,PARANTHESES>
131 <],PARANTHESES>
131 <=,ASSIGN_OP>
131 <{,PARANTHESES>
131 <">", "<", ">=", "<=", "==", "!=",STRING>
131 <},PARANTHESES>
131 <;,SEPERATOR>
132 <for,KEYWORD>
132 <(,PARANTHESES>
132 <int,KEYWORD>
132 <i,IDENTIFIER>
132 <=,ASSIGN_OP>
132 <0,INT_NUM>
132 <;,SEPERATOR>
132 <i,IDENTIFIER>
132 <<,RELOP_LT>
132 <6,INT_NUM>
132 <;,SEPERATOR>
132 <i,IDENTIFIER>
132 <+,ARMOP_+>
132 <+,ARMOP_+>
132 <),PARANTHESES>
133 <{,PARANTHESES>
134 <if,KEYWORD>
134 <(,PARANTHESES>
134 <strcmp,IDENTIFIER>
134 <(,PARANTHESES>
134 <str,IDENTIFIER>
134 <,,SEPERATOR>
134 <relop,IDENTIFIER>
134 <[,PARANTHESES>
134 <i,IDENTIFIER>
134 <],PARANTHESES>
134 <),PARANTHESES>
134 <==,RELOP_EQ>
134 <0,INT_NUM>
134 <),PARANTHESES>
135 <{,PARANTHESES>
136 <return,KEYWORD>
136 <1,INT_NUM>
136 <;,SEPERATOR>
137 <},PARANTHESES>
138 <},PARANTHESES>
139 <const,KEYWORD>
139 <char,KEYWORD>
139 <*,ARMOP_*>
139 <unaryop,IDENTIFIER>
139 <[,PARANTHESES>
139 <],PARANTHESES>
139 <=,ASSIGN_OP>
139 <{,PARANTHESES>
139 <"++", "--", "&",STRING>
139 <},PARANTHESES>
139 <;,SEPERATOR>
140 <for,KEYWORD>
140 <(,PARANTHESES>
140 <int,KEYWORD>
140 <i,IDENTIFIER>
140 <=,ASSIGN_OP>
140 <0,INT_NUM>
140 <;,SEPERATOR>
140 <i,IDENTIFIER>
140 <<,RELOP_LT>
140 <3,INT_NUM>
140 <;,SEPERATOR>
140 <i,IDENTIFIER>
140 <+,ARMOP_+>
140 <+,ARMOP_+>
140 <),PARANTHESES>
141 <{,PARANTHESES>
142 <if,KEYWORD>
142 <(,PARANTHESES>
142 <strcmp,IDENTIFIER>
142 <(,PARANTHESES>
142 <str,IDENTIFIER>
142 <,,SEPERATOR>
142 <unaryop,IDENTIFIER>
142 <[,PARANTHESES>
142 <i,IDENTIFIER>
142 <],PARANTHESES>
142 <),PARANTHESES>
142 <==,RELOP_EQ>
142 <0,INT_NUM>
142 <),PARANTHESES>
143 <{,PARANTHESES>
144 <return,KEYWORD>
144 <1,INT_NUM>
144 <;,SEPERATOR>
145 <},PARANTHESES>
146 <},PARANTHESES>
147 <const,KEYWORD>
147 <char,KEYWORD>
147 <*,ARMOP_*>
147 <shiftop,IDENTIFIER>
147 <[,PARANTHESES>
147 <],PARANTHESES>
147 <=,ASSIGN_OP>
147 <{,PARANTHESES>
147 <">>", "<<",STRING>
147 <},PARANTHESES>
147 <;,SEPERATOR>
148 <for,KEYWORD>
148 <(,PARANTHESES>
148 <int,KEYWORD>
148 <i,IDENTIFIER>
148 <=,ASSIGN_OP>
148 <0,INT_NUM>
148 <;,SEPERATOR>
148 <i,IDENTIFIER>
148 <<,RELOP_LT>
148 <2,INT_NUM>
148 <;,SEPERATOR>
148 <i,IDENTIFIER>
148 <+,ARMOP_+>
148 <+,ARMOP_+>
148 <),PARANTHESES>
149 <{,PARANTHESES>
150 <if,KEYWORD>
150 <(,PARANTHESES>
150 <strcmp,IDENTIFIER>
150 <(,PARANTHESES>
150 <str,IDENTIFIER>
150 <,,SEPERATOR>
150 <shiftop,IDENTIFIER>
150 <[,PARANTHESES>
150 <i,IDENTIFIER>
150 <],PARANTHESES>
150 <),PARANTHESES>
150 <==,RELOP_EQ>
150 <0,INT_NUM>
150 <),PARANTHESES>
151 <{,PARANTHESES>
152 <return,KEYWORD>
152 <1,INT_NUM>
152 <;,SEPERATOR>
153 <},PARANTHESES>
154 <},PARANTHESES>
155 <return,KEYWORD>
155 <0,INT_NUM>
155 <;,SEPERATOR>
156 <},PARANTHESES>
158 <int,KEYWORD>
158 <isConstant,IDENTIFIER>
158 <(,PARANTHESES>
158 <char,KEYWORD>
158 <*,ARMOP_*>
158 <str,IDENTIFIER>
158 <),PARANTHESES>
159 <{,PARANTHESES>
160 <if,KEYWORD>
160 <(,PARANTHESES>
160 <isLiteral,IDENTIFIER>
160 <(,PARANTHESES>
160 <str,IDENTIFIER>
160 <),PARANTHESES>
160 <||,LOGOP_OR>
160 <isNumber,IDENTIFIER>
160 <(,PARANTHESES>
160 <str,IDENTIFIER>
160 <),PARANTHESES>
160 <),PARANTHESES>
161 <return,KEYWORD>
161 <1,INT_NUM>
161 <;,SEPERATOR>
162 <return,KEYWORD>
162 <0,INT_NUM>
162 <;,SEPERATOR>
163 <},PARANTHESES>
165 <int,KEYWORD>
165 <isNumber,IDENTIFIER>
165 <(,PARANTHESES>
165 <char,KEYWORD>
165 <*,ARMOP_*>
165 <str,IDENTIFIER>
165 <),PARANTHESES>
166 <{,PARANTHESES>
168 <if,KEYWORD>
168 <(,PARANTHESES>
168 <matchPattern,IDENTIFIER>
168 <(,PARANTHESES>
168 <str,IDENTIFIER>
168 <,,SEPERATOR>
168 <"^[+|-][0-9][0-9]*$",STRING>
168 <),PARANTHESES>
168 <),PARANTHESES>
169 <return,KEYWORD>
169 <1,INT_NUM>
169 <;,SEPERATOR>
170 <if,KEYWORD>
170 <(,PARANTHESES>
170 <matchPattern,IDENTIFIER>
170 <(,PARANTHESES>
170 <str,IDENTIFIER>
170 <,,SEPERATOR>
170 <"^[0-9][0-9]*$",STRING>
170 <),PARANTHESES>
170 <),PARANTHESES>
171 <return,KEYWORD>
171 <1,INT_NUM>
171 <;,SEPERATOR>
172 <if,KEYWORD>
172 <(,PARANTHESES>
172 <matchPattern,IDENTIFIER>
172 <(,PARANTHESES>
172 <str,IDENTIFIER>
172 <,,SEPERATOR>
172 <"^[+|-][0-9][0-9]*.[0-9][0-9]*$",STRING>
172 <),PARANTHESES>
172 <),PARANTHESES>
173 <return,KEYWORD>
173 <1,INT_NUM>
173 <;,SEPERATOR>
174 <if,KEYWORD>
174 <(,PARANTHESES>
174 <matchPattern,IDENTIFIER>
174 <(,PARANTHESES>
174 <str,IDENTIFIER>
174 <,,SEPERATOR>
174 <"^[0-9]*.[0-9][0-9]*$",STRING>
174 <),PARANTHESES>
174 <),PARANTHESES>
175 <return,KEYWORD>
175 <1,INT_NUM>
175 <;,SEPERATOR>
176 <if,KEYWORD>
176 <(,PARANTHESES>
176 <matchPattern,IDENTIFIER>
176 <(,PARANTHESES>
176 <str,IDENTIFIER>
176 <,,SEPERATOR>
176 <"^[+|-][0-9][0-9]*.[0-9][0-9]*E[0-9][0-9]*$",STRING>
176 <),PARANTHESES>
176 <),PARANTHESES>
177 <return,KEYWORD>
177 <1,INT_NUM>
177 <;,SEPERATOR>
178 <if,KEYWORD>
178 <(,PARANTHESES>
178 <matchPattern,IDENTIFIER>
178 <(,PARANTHESES>
178 <str,IDENTIFIER>
178 <,,SEPERATOR>
178 <"^[0-9][0-9]*.[0-9][0-9]*E[0-9][0-9]*$",STRING>
178 <),PARANTHESES>
178 <),PARANTHESES>
179 <return,KEYWORD>
179 <1,INT_NUM>
179 <;,SEPERATOR>
180 <return,KEYWORD>
180 <0,INT_NUM>
180 <;,SEPERATOR>
181 <},PARANTHESES>
183 <int,KEYWORD>
183 <isLiteral,IDENTIFIER>
183 <(,PARANTHESES>
183 <char,KEYWORD>
183 <*,ARMOP_*>
183 <str,IDENTIFIER>
183 <),PARANTHESES>
184 <{,PARANTHESES>
185 <if,KEYWORD>
185 <(,PARANTHESES>
185 <matchPattern,IDENTIFIER>
185 <(,PARANTHESES>
185 <str,IDENTIFIER>
185 <,,SEPERATOR>
185 <"^\"[^\"]*\"$",STRING>
185 <),PARANTHESES>
185 <),PARANTHESES>
186 <return,KEYWORD>
186 <1,INT_NUM>
186 <;,SEPERATOR>
187 <if,KEYWORD>
187 <(,PARANTHESES>
187 <matchPattern,IDENTIFIER>
187 <(,PARANTHESES>
187 <str,IDENTIFIER>
187 <,,SEPERATOR>
187 <"^\'[^\']*\'$",STRING>
187 <),PARANTHESES>
187 <),PARANTHESES>
188 <return,KEYWORD>
188 <1,INT_NUM>
188 <;,SEPERATOR>
189 <return,KEYWORD>
189 <0,INT_NUM>
189 <;,SEPERATOR>
190 <},PARANTHESES>
192 <int,KEYWORD>
192 <matchPattern,IDENTIFIER>
192 <(,PARANTHESES>
192 <char,KEYWORD>
192 <*,ARMOP_*>
192 <str,IDENTIFIER>
192 <,,SEPERATOR>
192 <char,KEYWORD>
192 <*,ARMOP_*>
192 <pattern,IDENTIFIER>
192 <),PARANTHESES>
193 <{,PARANTHESES>
194 <regex_t,IDENTIFIER>
194 <regex,IDENTIFIER>
194 <;,SEPERATOR>
195 <if,KEYWORD>
195 <(,PARANTHESES>
195 <regcomp,IDENTIFIER>
195 <(,PARANTHESES>
195 <&,UNKNOWN>
195 <regex,IDENTIFIER>
195 <,,SEPERATOR>
195 <pattern,IDENTIFIER>
195 <,,SEPERATOR>
195 <0,INT_NUM>
195 <),PARANTHESES>
195 <!=,RELOP_NE>
195 <0,INT_NUM>
195 <),PARANTHESES>
196 <{,PARANTHESES>
197 <printf,IDENTIFIER>
197 <(,PARANTHESES>
197 <"Regex compilation failed\n",STRING>
197 <),PARANTHESES>
197 <;,SEPERATOR>
198 <exit,IDENTIFIER>
198 <(,PARANTHESES>
198 <1,INT_NUM>
198 <),PARANTHESES>
198 <;,SEPERATOR>
199 <},PARANTHESES>
199 <;,SEPERATOR>
201 <if,KEYWORD>
201 <(,PARANTHESES>
201 <regexec,IDENTIFIER>
201 <(,PARANTHESES>
201 <&,UNKNOWN>
201 <regex,IDENTIFIER>
201 <,,SEPERATOR>
201 <str,IDENTIFIER>
201 <,,SEPERATOR>
201 <0,INT_NUM>
201 <,,SEPERATOR>
201 <NULL,IDENTIFIER>
201 <,,SEPERATOR>
201 <0,INT_NUM>
201 <),PARANTHESES>
201 <==,RELOP_EQ>
201 <0,INT_NUM>
201 <),PARANTHESES>
202 <{,PARANTHESES>
203 <return,KEYWORD>
203 <1,INT_NUM>
203 <;,SEPERATOR>
204 <},PARANTHESES>
205 <else,KEYWORD>
206 <{,PARANTHESES>
207 <return,KEYWORD>
207 <0,INT_NUM>
207 <;,SEPERATOR>
208 <},PARANTHESES>
209 <},PARANTHESES>
Done